library(shiny)
library(dplyr)
library(tibble)
library(ggplot2)

# ─────────────────────────────── CONSTANTS ───────────────────────────────
EF_DIRECT_N2O   <- 0.01
GWP_N2O         <- 298
GWP_CH4         <- 25
N2O_CONVERSION  <- 44 / 28
SOC_TO_CO2      <- 3.67
EF_BURN_CH4     <- 2.7 / 1000
EF_BURN_N2O     <- 0.199 / 1000

# ─────────────────────────────── UI ───────────────────────────────
ui <- fluidPage(
  titlePanel("Cassava GHG Emission Reduction Calculator (VM0042-Compliant)"),
  
  # Header
  fluidRow(
    column(4),
    column(4, align = "center", strong("Baseline Scenario")),
    column(4, align = "center", strong("Project Scenario"))
  ),
  
  # Input Fields
  fluidRow(
    column(4, "Area (ha):"),
    column(4, numericInput("base_area", NULL, value = 1, min = 0)),
    column(4, numericInput("proj_area", NULL, value = 1, min = 0))
  ),
  fluidRow(
    column(4, "Yield (t/ha):"),
    column(4, numericInput("base_yield", NULL, value = 10, min = 0)),
    column(4, numericInput("proj_yield", NULL, value = 15, min = 0))
  ),
  fluidRow(
    column(4, "N Fertilizer (kg/ha):"),
    column(4, numericInput("base_n", NULL, value = 120, min = 0)),
    column(4, numericInput("proj_n", NULL, value = 80, min = 0))
  ),
  fluidRow(
    column(4, "SOC (tC/ha):"),
    column(4, numericInput("base_soc", NULL, value = 35, min = 0)),
    column(4, numericInput("proj_soc", NULL, value = 40, min = 0))
  ),
  fluidRow(
    column(4, "Residue Mass (kg/ha):"),
    column(4, numericInput("base_res", NULL, value = 1000, min = 0)),
    column(4, numericInput("proj_res", NULL, value = 1000, min = 0))
  ),
  fluidRow(
    column(4, "Residue Burn Fraction:"),
    column(4, numericInput("base_burn", NULL, value = 0.5, min = 0, max = 1, step = 0.01)),
    column(4, numericInput("proj_burn", NULL, value = 0.0, min = 0, max = 1, step = 0.01))
  ),
  
  br(),
  fluidRow(
    column(4),
    column(8, actionButton("calc", "Calculate GHG Reduction", class = "btn-primary"))
  ),
  br(),
  
  # Output Section - Bottom Split View
  fluidRow(
    column(6,
           h4("Emissions Summary"),
           tableOutput("results_tbl"),
           h4("Net GHG Emission Reduction"),
           verbatimTextOutput("ghg_reduction"),
           br(),
           downloadButton("download_csv", "Download Summary (CSV)")
    ),
    column(6,
           h4("CO₂e Contributions by Source"),
           plotOutput("ghg_plot", height = "350px")
    )
  )
)

# ─────────────────────────────── SERVER ───────────────────────────────
server <- function(input, output) {
  
  # Core GHG calculation logic
  calc_results <- eventReactive(input$calc, {
    req(input$base_area, input$proj_area)
    
    dat <- tibble(
      Scenario = c("Baseline", "Project"),
      Area_ha = c(input$base_area, input$proj_area),
      Yield_t_ha = c(input$base_yield, input$proj_yield),
      N_fertilizer_kg_ha = c(input$base_n, input$proj_n),
      SOC_tC_ha = c(input$base_soc, input$proj_soc),
      Residue_mass_kg_ha = c(input$base_res, input$proj_res),
      Residue_burning_fraction = c(input$base_burn, input$proj_burn)
    )
    
    dat <- dat %>%
      mutate(
        N2O_kg_ha = N_fertilizer_kg_ha * EF_DIRECT_N2O * N2O_CONVERSION,
        N2O_CO2e_kg_ha = N2O_kg_ha * GWP_N2O,
        Burn_CH4_kg_ha = Residue_mass_kg_ha * Residue_burning_fraction * EF_BURN_CH4,
        Burn_N2O_kg_ha = Residue_mass_kg_ha * Residue_burning_fraction * EF_BURN_N2O * N2O_CONVERSION,
        Burn_CO2e_kg_ha = Burn_CH4_kg_ha * GWP_CH4 + Burn_N2O_kg_ha * GWP_N2O,
        Total_CO2e_kg_ha = N2O_CO2e_kg_ha + Burn_CO2e_kg_ha,
        N2O_CO2e_kg_total = N2O_CO2e_kg_ha * Area_ha,
        Burn_CO2e_kg_total = Burn_CO2e_kg_ha * Area_ha,
        Total_CO2e_kg_total = Total_CO2e_kg_ha * Area_ha
      )
    
    delta_SOC_CO2e_kg_ha <- (dat$SOC_tC_ha[2] - dat$SOC_tC_ha[1]) * SOC_TO_CO2
    delta_SOC_CO2e_total <- delta_SOC_CO2e_kg_ha * dat$Area_ha[2]
    
    GHG_reduction_total_kg  <- dat$Total_CO2e_kg_total[1] - dat$Total_CO2e_kg_total[2] + delta_SOC_CO2e_total
    GHG_reduction_total_ton <- GHG_reduction_total_kg / 1000
    
    results_tbl <- tibble(
      Metric = c("Yield (t/ha)",
                 "N2O_CO2e_kg per ha", "Burn_CO2e_kg per ha", "Total_CO2e_kg per ha", "",
                 "Area (ha)",
                 "N2O_CO2e_kg total", "Burn_CO2e_kg total", "Total_CO2e_kg total"),
      Baseline = c(
        dat$Yield_t_ha[1],
        round(dat$N2O_CO2e_kg_ha[1], 2),
        round(dat$Burn_CO2e_kg_ha[1], 2),
        round(dat$Total_CO2e_kg_ha[1], 2), "",
        dat$Area_ha[1],
        round(dat$N2O_CO2e_kg_total[1], 2),
        round(dat$Burn_CO2e_kg_total[1], 2),
        round(dat$Total_CO2e_kg_total[1], 2)
      ),
      Project = c(
        dat$Yield_t_ha[2],
        round(dat$N2O_CO2e_kg_ha[2], 2),
        round(dat$Burn_CO2e_kg_ha[2], 2),
        round(dat$Total_CO2e_kg_ha[2], 2), "",
        dat$Area_ha[2],
        round(dat$N2O_CO2e_kg_total[2], 2),
        round(dat$Burn_CO2e_kg_total[2], 2),
        round(dat$Total_CO2e_kg_total[2], 2)
      )
    ) %>%
      mutate(
        Difference = ifelse(is.na(as.numeric(Baseline)) | is.na(as.numeric(Project)), "",
                            round(as.numeric(Project) - as.numeric(Baseline), 2)),
        `Percent Change (%)` = ifelse(is.na(as.numeric(Baseline)) | as.numeric(Baseline) == 0 |
                                        is.na(as.numeric(Project)),
                                      "",
                                      round((as.numeric(Project) - as.numeric(Baseline)) / abs(as.numeric(Baseline)) * 100, 1))
      )
    
    list(
      results_tbl = results_tbl,
      ghg_reduction_text = paste0(
        "Net reduction: ", round(GHG_reduction_total_ton, 3), " tCO2e for ", dat$Area_ha[2], " ha ",
        "(", round(GHG_reduction_total_ton / dat$Area_ha[2], 3), " tCO2e/ha)"
      ),
      dat = dat
    )
  })
  
  output$results_tbl <- renderTable({
    req(calc_results())
    calc_results()$results_tbl
  }, striped = TRUE, bordered = TRUE, spacing = "m")
  
  output$ghg_reduction <- renderText({
    req(calc_results())
    calc_results()$ghg_reduction_text
  })
  
  output$download_csv <- downloadHandler(
    filename = function() {
      paste0("GHG_summary_", Sys.Date(), ".csv")
    },
    content = function(file) {
      write.csv(calc_results()$results_tbl, file, row.names = FALSE)
    }
  )
  
  output$ghg_plot <- renderPlot({
    req(calc_results())
    dat <- calc_results()$dat
    
    plot_data <- tibble(
      Scenario = rep(c("Baseline", "Project"), each = 2),
      Source = rep(c("N₂O (Fertilizer)", "Residue Burning"), times = 2),
      CO2e_kg_per_ha = c(
        dat$N2O_CO2e_kg_ha[1], dat$Burn_CO2e_kg_ha[1],
        dat$N2O_CO2e_kg_ha[2], dat$Burn_CO2e_kg_ha[2]
      )
    )
    
    ggplot(plot_data, aes(x = Source, y = CO2e_kg_per_ha, fill = Scenario)) +
      geom_bar(stat = "identity", position = "dodge") +
      labs(title = "CO₂e Emissions by Source (per ha)",
           x = "Emission Source", y = "CO₂e (kg/ha)") +
      theme_minimal(base_size = 14)
  })
}

# ─────────────────────────────── APP ───────────────────────────────
shinyApp(ui, server)
